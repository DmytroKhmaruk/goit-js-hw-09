{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEpCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAGFQ,SAASC,cAAc,SAC/BC,iBAAiB,UAAU,SAAUC,GAC1CA,EAAMC,iBAEJ,MAAMC,EAAO,CACXC,WAAYN,SAASC,cAAc,UACnCM,UAAWP,SAASC,cAAc,SAClCO,YAAaR,SAASC,cAAc,YAGtC,IAAIQ,EAAQC,SAASL,EAAKC,WAAWK,OACrC,MAAMC,EAAOF,SAASL,EAAKE,UAAUI,OAC/BE,EAASH,SAASL,EAAKG,YAAYG,OAEzC,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAIlCxB,EAHiBwB,EAAI,EACAL,EAAQK,EAAIF,GAG9BG,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBwB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAqB3B,QAAiBC,OAC3D2B,QAAMC,IAAI,uBAAqB7B,QAAiBC,MAAU,IAE9D6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClBwB,EAAA5B,GAAS6B,OAAOK,QAAQ,sBAAoB/B,QAAiBC,OAC3D2B,QAAMC,IAAI,sBAAoB7B,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n  });\n}\nconst form = document.querySelector('.form');\nform.addEventListener('submit', function (event) {\nevent.preventDefault();\n\n  const refs = {\n    delayInput: document.querySelector('.delay'),\n    stepInput: document.querySelector('.step'),\n    amountInput: document.querySelector('.amount'),\n  }\n\n  let delay = parseInt(refs.delayInput.value);\n  const step = parseInt(refs.stepInput.value);\n  const amount = parseInt(refs.amountInput.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    const position = i + 1;\n    const currentDelay = delay + i * step;\n\n    createPromise(position, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n         console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});  "],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","refs","delayInput","stepInput","amountInput","delay1","parseInt","value","step","amount","i","then","$parcel$interopDefault","Notify","success","console","log","catch","failure"],"version":3,"file":"03-promises.fe7937c2.js.map"}