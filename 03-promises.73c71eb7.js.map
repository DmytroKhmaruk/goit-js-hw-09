{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEpCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAGIQ,SAASC,cAAc,SAC/BC,iBAAiB,UAAU,SAAUC,GAC1CA,EAAMC,iBAYJ,IAVA,IAAMC,EAAO,CACXC,WAAYN,SAASC,cAAc,UACnCM,UAAWP,SAASC,cAAc,SAClCO,YAAaR,SAASC,cAAc,YAGlCQ,EAAQC,SAASL,EAAKC,WAAWK,OAC/BC,EAAOF,SAASL,EAAKE,UAAUI,OAC/BE,EAASH,SAASL,EAAKG,YAAYG,OAEhCG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAIlCxB,EAHiBwB,EAAI,EACAL,EAAQK,EAAIF,GAG9BG,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjByB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,OACnE6B,QAAMC,IAAI,uBAAwCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAE5D+B,OAAM,SAAAP,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClByB,EAAA7B,GAAS8B,OAAOM,QAAQ,sBAAuCJ,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,OACnE6B,QAAMC,IAAI,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n  });\n}\nconst form = document.querySelector('.form');\nform.addEventListener('submit', function (event) {\nevent.preventDefault();\n\n  const refs = {\n    delayInput: document.querySelector('.delay'),\n    stepInput: document.querySelector('.step'),\n    amountInput: document.querySelector('.amount'),\n  }\n\n  let delay = parseInt(refs.delayInput.value);\n  const step = parseInt(refs.stepInput.value);\n  const amount = parseInt(refs.amountInput.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    const position = i + 1;\n    const currentDelay = delay + i * step;\n\n    createPromise(position, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n         console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});  "],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","refs","delayInput","stepInput","amountInput","delay1","parseInt","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","console","log","catch","failure"],"version":3,"file":"03-promises.73c71eb7.js.map"}